{
    "openapi": "3.0.0",
    "info": {
        "title": "Inrave API",
        "description": "This is the API documentation for Inrave project.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://a1050418.xsph.ru/",
            "description": "Local API server"
        }
    ],
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in a user and generate an API token",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "1|qwertyuiopasdfghjklzxcvbnm123456"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out the user and delete the token",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/news": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Get a list of news",
                "operationId": "9bfe744cf19dcb58e9ab9677c29ee6c7",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/News"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "News"
                ],
                "summary": "Create a new news item",
                "operationId": "1c0fdf6cc53f1508a87121ef9111be5b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Breaking News"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "This is a news description."
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "News created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/News"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/news/{id}": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Get a specific news item by ID",
                "operationId": "235a202c862ec6888f4129413c1f2bcd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/News"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "News not found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "News"
                ],
                "summary": "Update an existing news item",
                "operationId": "11a73338ef61a1ffd2ab3771639f638e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated News Title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "News updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/News"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "News not found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "News"
                ],
                "summary": "Delete a news item by ID",
                "operationId": "cd3235328b3ea2080e4d0a47986d4714",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "News deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "News deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "News not found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a list of products with filters and pagination",
                "operationId": "1bfaa78d1c2c3848ab8165c5dadcad3e",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Filter products by title",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "min_price",
                        "in": "query",
                        "description": "Filter products by minimum price",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "max_price",
                        "in": "query",
                        "description": "Filter products by maximum price",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "operationId": "e8185e307706e2cd84bbcf5171e2f09d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "price"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Sample Product"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "This is a sample product."
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": "19.99"
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "Red"
                                    },
                                    "composition": {
                                        "type": "string",
                                        "example": "Cotton"
                                    },
                                    "images": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a specific product by ID",
                "operationId": "7ab21ddb713501f3d4c2914892c02a21",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update an existing product",
                "operationId": "6a7e11900844cd85cff66e662b82bd4c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Product Title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": "29.99"
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "Blue"
                                    },
                                    "composition": {
                                        "type": "string",
                                        "example": "Polyester"
                                    },
                                    "images": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product by ID",
                "operationId": "e80a6ca46716acee6b47ea1ac91663c0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/services": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get a list of services",
                "operationId": "4c175c5d6594b4a5112bbe15a46e2bb4",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Filter services by title",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "min_price",
                        "in": "query",
                        "description": "Filter services by minimum price",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "max_price",
                        "in": "query",
                        "description": "Filter services by maximum price",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "trainer_id",
                        "in": "query",
                        "description": "Filter services by trainer ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Service"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "Create a new service",
                "operationId": "b05b71c30267faa468172458580fb6fc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "price"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Boxing Training"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Intensive boxing training sessions."
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": "99.99"
                                    },
                                    "trainers": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/services/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get a specific service by ID",
                "operationId": "42775b582b563bc36a9e06ae850100bf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Services"
                ],
                "summary": "Update an existing service",
                "operationId": "38f6a6cc2f5cd3dfdf39805e7fa21996",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Advanced Boxing Training"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Advanced techniques in boxing."
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": "150.00"
                                    },
                                    "trainers": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Services"
                ],
                "summary": "Delete a service by ID",
                "operationId": "c189d6ab2d037e8fb4228a535ae6a399",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Service deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Service not found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/trainers": {
            "get": {
                "tags": [
                    "Trainers"
                ],
                "summary": "Get a list of trainers",
                "operationId": "116f689cd23c33d0d52057ab975e4a18",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter trainers by first or last name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_id",
                        "in": "query",
                        "description": "Filter trainers by service ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Trainer"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Trainers"
                ],
                "summary": "Create a new trainer",
                "operationId": "02af24b16f7d770be5454aa8b0d33fbd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "description"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Experienced boxing trainer."
                                    },
                                    "photo": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "services": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Trainer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Trainer"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/trainers/{id}": {
            "get": {
                "tags": [
                    "Trainers"
                ],
                "summary": "Get a specific trainer by ID",
                "operationId": "dff48a85414a68482bfd49897b6a8656",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Trainer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Trainer not found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Trainers"
                ],
                "summary": "Update an existing trainer",
                "operationId": "ab2c71f48ea640c221b3fa20473989a2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description"
                                    },
                                    "photo": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "services": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Trainer updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Trainer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Trainer not found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Trainers"
                ],
                "summary": "Delete a trainer by ID",
                "operationId": "f34b04bc84320ad785fba6b1cbc37dbf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trainer deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trainer deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Trainer not found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/training-requests": {
            "post": {
                "tags": [
                    "Training Requests"
                ],
                "summary": "Create a training request",
                "operationId": "b51b1ff510c6e0fcae63c8a95c6fd9e5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "phone",
                                    "consent"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "I'd like to join boxing classes."
                                    },
                                    "consent": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "News": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Breaking News"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is a news description."
                    },
                    "image": {
                        "type": "string",
                        "example": "news/image.jpg",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Product": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Sample Product"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is a sample product."
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 19.989999999999998
                    },
                    "color": {
                        "type": "string",
                        "example": "Red"
                    },
                    "composition": {
                        "type": "string",
                        "example": "Cotton"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "products/image1.jpg"
                        }
                    }
                },
                "type": "object"
            },
            "Service": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Boxing Training"
                    },
                    "description": {
                        "type": "string",
                        "example": "Intensive boxing training sessions."
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": "99.99"
                    },
                    "image": {
                        "type": "string",
                        "example": "services/image.jpg",
                        "nullable": true
                    },
                    "trainers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Trainer"
                        }
                    }
                },
                "type": "object"
            },
            "Trainer": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "description": {
                        "type": "string",
                        "example": "Experienced boxing trainer."
                    },
                    "photo": {
                        "type": "string",
                        "example": "trainers/photo.jpg",
                        "nullable": true
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Service"
                        }
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Training Requests",
            "description": "API for managing training requests"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "News",
            "description": "News"
        },
        {
            "name": "Products",
            "description": "Products"
        },
        {
            "name": "Services",
            "description": "Services"
        },
        {
            "name": "Trainers",
            "description": "Trainers"
        }
    ]
}